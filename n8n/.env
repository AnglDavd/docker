# How to generate secure passwords:
# Linux/macOS: openssl rand -hex 32
# Windows (PowerShell): (32 | ForEach-Object { -join ((48..57) + (65..90) + (97..122) | Get-Random -Count $_ | ForEach-Object {[char]$_}) })
# Online password generators are also an option.

# Database credentials
POSTGRES_DB=n8n
POSTGRES_USER=n8n
POSTGRES_PASSWORD=n8n_password # Change this to a strong password (e.g., generated using openssl)

# n8n specific settings
N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true # Recommended: Enforce correct permissions for settings file
N8N_RUNNERS_ENABLED=true # Enable task runners
DB_POSTGRESDB_PASSWORD=n8n_password # This must match the POSTGRES_PASSWORD above.

# Internal n8n database connection details (referencing main database credentials)
DB_TYPE=postgresdb
DB_POSTGRESDB_HOST=db
DB_POSTGRESDB_DATABASE=n8n
DB_POSTGRESDB_USER=n8n
GENERIC_TIMEZONE=Europe/Berlin # Adjust timezone as needed
N8N_HOST=your_domain.com # Replace with your domain
N8N_PROTOCOL=https # Use https for production
WEBHOOK_URL=https://your_domain.com/ # Replace with your domain, should typically point to the same public URL where n8n is accessible.
# Redis Configuration
QUEUE_HEALTH_CHECK_ACTIVE=true
QUEUE_BULL_REDIS_HOST=redis
QUEUE_BULL_REDIS_PORT=6379

# Worker Configuration
N8N_RUNNERS_MODE_MAIN=queue # Set to 'queue' for the main n8n instance
N8N_RUNNERS_MODE_WORKER=worker # Set to 'worker' for worker instances
N8N_RUNNERS_BROKER_URL=redis://redis:6379 # URL for the Redis broker
N8N_RUNNERS_MAX_CONCURRENCY=5 # Max concurrent workflows for a worker


# Email notifications (example)
N8N_EMAIL_MODE=smtp
N8N_SMTP_HOST=smtp.example.com
N8N_SMTP_PORT=587
N8N_SMTP_USER=user@example.com
N8N_SMTP_PASS=smtp_password # Replace with your SMTP password (e.g., generated using openssl)
N8N_SMTP_SENDER=user@example.com
N8N_SMTP_SSL=true
