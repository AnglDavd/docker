services:
  romm:
    image: rommapp/romm:latest
    container_name: romm
    restart: always
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWD=${DB_PASSWD}
      - ROMM_AUTH_SECRET_KEY=${ROMM_AUTH_SECRET_KEY}
      - SCREENSCRAPER_USER=${SCREENSCRAPER_USER}
      - SCREENSCRAPER_PASSWORD=${SCREENSCRAPER_PASSWORD}
      - RETROACHIEVEMENTS_API_KEY=${RETROACHIEVEMENTS_API_KEY}
      - STEAMGRIDDB_API_KEY=${STEAMGRIDDB_API_KEY}
      - HASHEOUS_API_ENABLED=${HASHEOUS_API_ENABLED}
    volumes:
      - ./romm_resources:/romm/resources # Resources fetched from IGDB (covers, screenshots, etc.)
      - ./romm_redis_data:/redis-data # Cached data for background tasks
      - /media/data/Docker/romm/library:/romm/library # Your game library. Check https://github.com/rommapp/romm?tab=readme-ov-file#folder-structure for more details.
      - /media/data/Docker/romm/assets:/romm/assets # Uploaded saves, states, etc.
      - ./config.yml:/romm/config/config.yml # Path where config.yml is stored
    ports:
      - 80:8080
    depends_on:
      romm-db:
        condition: service_healthy
        restart: true
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1g

  romm-db:
    image: mariadb:latest
    container_name: romm-db
    restart: always
    environment:
      - MARIADB_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
      - MARIADB_DATABASE=${MARIADB_DATABASE}
      - MARIADB_USER=${MARIADB_USER}
      - MARIADB_PASSWORD=${MARIADB_PASSWORD}
    volumes:
      - ./mysql_data:/var/lib/mysql
    command: --innodb-buffer-pool-size=768M --bind-address=0.0.0.0
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 30s
      start_interval: 10s
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1g
