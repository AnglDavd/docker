version: '3.9'
services:
  evolution-api:
    container_name: evolution_api
    image: atendai/evolution-api:v2.1.1
    command: sh -c 'until pg_isready -h db -p 5432 -U ${POSTGRES_USER} -d ${POSTGRES_DB}; do echo >&2 "Postgres is unavailable - sleeping"; sleep 1; done; echo >&2 "Postgres is up - executing command"; npm run db:deploy && npm run start:prod'
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - DATABASE_CONNECTION_URI=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    volumes:
      - evolution_instances:/evolution/instances
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
  db:
    image: postgres:14
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    image: redis:latest
    restart: unless-stopped
    volumes:
      - redis_data:/data
volumes:
  evolution_instances:
  postgres_data:
  redis_data:
